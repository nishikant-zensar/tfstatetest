name: Terraform State Import Test
on:
  workflow_dispatch:
    inputs:
      jobToRun:
        description: 'Select Job'
        required: true
        default: 'TfState'
        type: choice
        options:
          - TfState
env:
  terraformVersion: '1.8.0'

permissions:
  id-token: write
  contents: read
  issues: write

jobs:
  TfState:
    if: ${{ github.event.inputs.jobToRun == 'TfState' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_backend_resource_group_name: ${{ secrets.BACKEND_RESOURCE_GROUP_NAME }}
          TF_VAR_backend_storage_account_name: ${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}
          TF_VAR_backend_container_name: ${{ secrets.BACKEND_CONTAINER_NAME }}
          TF_VAR_backend_key: tfimport.terraform.tfstate
        run: |
          cd modules/tf-rg-test
          terraform init \
            -backend-config="resource_group_name=${TF_VAR_backend_resource_group_name}" \
            -backend-config="storage_account_name=${TF_VAR_backend_storage_account_name}" \
            -backend-config="container_name=${TF_VAR_backend_container_name}" \
            -backend-config="key=${TF_VAR_backend_key}"

      - name: Terraform Import
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_backend_resource_group_name: ${{ secrets.BACKEND_RESOURCE_GROUP_NAME }}
          TF_VAR_backend_storage_account_name: ${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}
          TF_VAR_backend_container_name: ${{ secrets.BACKEND_CONTAINER_NAME }}
          TF_VAR_backend_key: tfimport.terraform.tfstate
        run: |
          cd modules/tf-rg-test
          - name: Terraform Import Resource Group
            terraform import azurerm_resource_group.rg-conn3 /subscriptions/eca8a48a-2dc4-45da-908c-94bf6100016c/resourceGroups/rg-conn3

      - name: Terraform Plan Import
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_backend_resource_group_name: ${{ secrets.BACKEND_RESOURCE_GROUP_NAME }}
          TF_VAR_backend_storage_account_name: ${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}
          TF_VAR_backend_container_name: ${{ secrets.BACKEND_CONTAINER_NAME }}
          TF_VAR_backend_key: tfimport.terraform.tfstate
        run: |
          cd modules/tf-rg-test
          terraform plan -out=tfplan
          terraform show -no-color tfplan > plan.txt  

      - name: Upload .terraform.lock.hcl
        uses: actions/upload-artifact@v4
        with:
          name: terraform-workspace
          path: modules/tf-rg-test/.terraform.lock.hcl
          include-hidden-files: true

      - name: Upload plan.txt artifact
        uses: actions/upload-artifact@v4
        with:
          name: plan-txt-artifact
          path: modules/tf-rg-test/plan.txt

      - name: Upload tfplan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-artifact
          path: modules/tf-rg-test/tfplan
          
      - name: Await manual approval before apply
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: nishikant-zensar
          minimum-approvals: 1
          issue-title: "Manual approval required for Import apply"
          issue-body: "Please approve to proceed with Terraform apply for Import."
          exclude-workflow-initiator-as-approver: false
      
      - name: Terraform Apply Network Rules
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_backend_resource_group_name: ${{ secrets.BACKEND_RESOURCE_GROUP_NAME }}
          TF_VAR_backend_storage_account_name: ${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}
          TF_VAR_backend_container_name: ${{ secrets.BACKEND_CONTAINER_NAME }}
          TF_VAR_backend_key: tfimport.terraform.tfstate
        run: |
          cd modules/tf-rg-test
          terraform apply -auto-approve tfplan
